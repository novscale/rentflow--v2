/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BillUpdateManyWithoutNestsInput } from "./BillUpdateManyWithoutNestsInput";
import {
  ValidateNested,
  IsOptional,
  IsBoolean,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { PropertyWhereUniqueInput } from "../../property/base/PropertyWhereUniqueInput";
import { RentUpdateManyWithoutNestsInput } from "./RentUpdateManyWithoutNestsInput";
import { TenantUpdateManyWithoutNestsInput } from "./TenantUpdateManyWithoutNestsInput";

@InputType()
class NestUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BillUpdateManyWithoutNestsInput,
  })
  @ValidateNested()
  @Type(() => BillUpdateManyWithoutNestsInput)
  @IsOptional()
  @Field(() => BillUpdateManyWithoutNestsInput, {
    nullable: true,
  })
  bills?: BillUpdateManyWithoutNestsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isOccupied?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isUnit?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => PropertyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PropertyWhereUniqueInput)
  @IsOptional()
  @Field(() => PropertyWhereUniqueInput, {
    nullable: true,
  })
  propertyId?: PropertyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RentUpdateManyWithoutNestsInput,
  })
  @ValidateNested()
  @Type(() => RentUpdateManyWithoutNestsInput)
  @IsOptional()
  @Field(() => RentUpdateManyWithoutNestsInput, {
    nullable: true,
  })
  rents?: RentUpdateManyWithoutNestsInput;

  @ApiProperty({
    required: false,
    type: () => TenantUpdateManyWithoutNestsInput,
  })
  @ValidateNested()
  @Type(() => TenantUpdateManyWithoutNestsInput)
  @IsOptional()
  @Field(() => TenantUpdateManyWithoutNestsInput, {
    nullable: true,
  })
  tenants?: TenantUpdateManyWithoutNestsInput;
}

export { NestUpdateInput as NestUpdateInput };
