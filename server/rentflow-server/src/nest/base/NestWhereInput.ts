/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BillListRelationFilter } from "../../bill/base/BillListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { PropertyWhereUniqueInput } from "../../property/base/PropertyWhereUniqueInput";
import { RentListRelationFilter } from "../../rent/base/RentListRelationFilter";
import { TenantListRelationFilter } from "../../tenant/base/TenantListRelationFilter";

@InputType()
class NestWhereInput {
  @ApiProperty({
    required: false,
    type: () => BillListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BillListRelationFilter)
  @IsOptional()
  @Field(() => BillListRelationFilter, {
    nullable: true,
  })
  bills?: BillListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isOccupied?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  isUnit?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => PropertyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PropertyWhereUniqueInput)
  @IsOptional()
  @Field(() => PropertyWhereUniqueInput, {
    nullable: true,
  })
  propertyId?: PropertyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RentListRelationFilter)
  @IsOptional()
  @Field(() => RentListRelationFilter, {
    nullable: true,
  })
  rents?: RentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TenantListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TenantListRelationFilter)
  @IsOptional()
  @Field(() => TenantListRelationFilter, {
    nullable: true,
  })
  tenants?: TenantListRelationFilter;
}

export { NestWhereInput as NestWhereInput };
