/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Bill } from "../../bill/base/Bill";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { Property } from "../../property/base/Property";
import { Rent } from "../../rent/base/Rent";
import { Tenant } from "../../tenant/base/Tenant";

@ObjectType()
class Nest {
  @ApiProperty({
    required: false,
    type: () => [Bill],
  })
  @ValidateNested()
  @Type(() => Bill)
  @IsOptional()
  bills?: Array<Bill>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isOccupied!: boolean;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isUnit!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: () => Property,
  })
  @ValidateNested()
  @Type(() => Property)
  propertyId?: Property;

  @ApiProperty({
    required: false,
    type: () => [Rent],
  })
  @ValidateNested()
  @Type(() => Rent)
  @IsOptional()
  rents?: Array<Rent>;

  @ApiProperty({
    required: false,
    type: () => [Tenant],
  })
  @ValidateNested()
  @Type(() => Tenant)
  @IsOptional()
  tenants?: Array<Tenant>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Nest as Nest };
